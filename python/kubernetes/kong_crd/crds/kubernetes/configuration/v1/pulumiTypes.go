// Code generated by crd2pulumi DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// KongClusterPlugin is the Schema for the kongclusterplugins API
type KongClusterPluginType struct {
	ApiVersion *string `pulumi:"apiVersion"`
	// Config contains the plugin configuration.
	Config map[string]interface{} `pulumi:"config"`
	// ConfigFrom references a secret containing the plugin configuration.
	ConfigFrom *KongClusterPluginConfigfrom `pulumi:"configFrom"`
	// ConsumerRef is a reference to a particular consumer
	ConsumerRef *string `pulumi:"consumerRef"`
	// Disabled set if the plugin is disabled or not
	Disabled *bool              `pulumi:"disabled"`
	Kind     *string            `pulumi:"kind"`
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// Ordering overrides the normal plugin execution order
	Ordering *KongClusterPluginOrdering `pulumi:"ordering"`
	// PluginName is the name of the plugin to which to apply the config
	Plugin string `pulumi:"plugin"`
	// Protocols configures plugin to run on requests received on specific protocols.
	Protocols []string `pulumi:"protocols"`
	// RunOn configures the plugin to run on the first or the second or both nodes in case of a service mesh deployment.
	Run_on *string `pulumi:"run_on"`
}

// ConfigFrom references a secret containing the plugin configuration.
type KongClusterPluginConfigfrom struct {
	// NamespacedSecretValueFromSource represents the source of a secret value specifying the secret namespace
	SecretKeyRef *KongClusterPluginConfigfromSecretkeyref `pulumi:"secretKeyRef"`
}

// KongClusterPluginConfigfromInput is an input type that accepts KongClusterPluginConfigfromArgs and KongClusterPluginConfigfromOutput values.
// You can construct a concrete instance of `KongClusterPluginConfigfromInput` via:
//
//          KongClusterPluginConfigfromArgs{...}
type KongClusterPluginConfigfromInput interface {
	pulumi.Input

	ToKongClusterPluginConfigfromOutput() KongClusterPluginConfigfromOutput
	ToKongClusterPluginConfigfromOutputWithContext(context.Context) KongClusterPluginConfigfromOutput
}

// ConfigFrom references a secret containing the plugin configuration.
type KongClusterPluginConfigfromArgs struct {
	// NamespacedSecretValueFromSource represents the source of a secret value specifying the secret namespace
	SecretKeyRef KongClusterPluginConfigfromSecretkeyrefPtrInput `pulumi:"secretKeyRef"`
}

func (KongClusterPluginConfigfromArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KongClusterPluginConfigfrom)(nil)).Elem()
}

func (i KongClusterPluginConfigfromArgs) ToKongClusterPluginConfigfromOutput() KongClusterPluginConfigfromOutput {
	return i.ToKongClusterPluginConfigfromOutputWithContext(context.Background())
}

func (i KongClusterPluginConfigfromArgs) ToKongClusterPluginConfigfromOutputWithContext(ctx context.Context) KongClusterPluginConfigfromOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KongClusterPluginConfigfromOutput)
}

func (i KongClusterPluginConfigfromArgs) ToKongClusterPluginConfigfromPtrOutput() KongClusterPluginConfigfromPtrOutput {
	return i.ToKongClusterPluginConfigfromPtrOutputWithContext(context.Background())
}

func (i KongClusterPluginConfigfromArgs) ToKongClusterPluginConfigfromPtrOutputWithContext(ctx context.Context) KongClusterPluginConfigfromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KongClusterPluginConfigfromOutput).ToKongClusterPluginConfigfromPtrOutputWithContext(ctx)
}

// KongClusterPluginConfigfromPtrInput is an input type that accepts KongClusterPluginConfigfromArgs, KongClusterPluginConfigfromPtr and KongClusterPluginConfigfromPtrOutput values.
// You can construct a concrete instance of `KongClusterPluginConfigfromPtrInput` via:
//
//          KongClusterPluginConfigfromArgs{...}
//
//  or:
//
//          nil
type KongClusterPluginConfigfromPtrInput interface {
	pulumi.Input

	ToKongClusterPluginConfigfromPtrOutput() KongClusterPluginConfigfromPtrOutput
	ToKongClusterPluginConfigfromPtrOutputWithContext(context.Context) KongClusterPluginConfigfromPtrOutput
}

type kongClusterPluginConfigfromPtrType KongClusterPluginConfigfromArgs

func KongClusterPluginConfigfromPtr(v *KongClusterPluginConfigfromArgs) KongClusterPluginConfigfromPtrInput {
	return (*kongClusterPluginConfigfromPtrType)(v)
}

func (*kongClusterPluginConfigfromPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KongClusterPluginConfigfrom)(nil)).Elem()
}

func (i *kongClusterPluginConfigfromPtrType) ToKongClusterPluginConfigfromPtrOutput() KongClusterPluginConfigfromPtrOutput {
	return i.ToKongClusterPluginConfigfromPtrOutputWithContext(context.Background())
}

func (i *kongClusterPluginConfigfromPtrType) ToKongClusterPluginConfigfromPtrOutputWithContext(ctx context.Context) KongClusterPluginConfigfromPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KongClusterPluginConfigfromPtrOutput)
}

// ConfigFrom references a secret containing the plugin configuration.
type KongClusterPluginConfigfromOutput struct{ *pulumi.OutputState }

func (KongClusterPluginConfigfromOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KongClusterPluginConfigfrom)(nil)).Elem()
}

func (o KongClusterPluginConfigfromOutput) ToKongClusterPluginConfigfromOutput() KongClusterPluginConfigfromOutput {
	return o
}

func (o KongClusterPluginConfigfromOutput) ToKongClusterPluginConfigfromOutputWithContext(ctx context.Context) KongClusterPluginConfigfromOutput {
	return o
}

func (o KongClusterPluginConfigfromOutput) ToKongClusterPluginConfigfromPtrOutput() KongClusterPluginConfigfromPtrOutput {
	return o.ToKongClusterPluginConfigfromPtrOutputWithContext(context.Background())
}

func (o KongClusterPluginConfigfromOutput) ToKongClusterPluginConfigfromPtrOutputWithContext(ctx context.Context) KongClusterPluginConfigfromPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KongClusterPluginConfigfrom) *KongClusterPluginConfigfrom {
		return &v
	}).(KongClusterPluginConfigfromPtrOutput)
}

// NamespacedSecretValueFromSource represents the source of a secret value specifying the secret namespace
func (o KongClusterPluginConfigfromOutput) SecretKeyRef() KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return o.ApplyT(func(v KongClusterPluginConfigfrom) *KongClusterPluginConfigfromSecretkeyref { return v.SecretKeyRef }).(KongClusterPluginConfigfromSecretkeyrefPtrOutput)
}

type KongClusterPluginConfigfromPtrOutput struct{ *pulumi.OutputState }

func (KongClusterPluginConfigfromPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KongClusterPluginConfigfrom)(nil)).Elem()
}

func (o KongClusterPluginConfigfromPtrOutput) ToKongClusterPluginConfigfromPtrOutput() KongClusterPluginConfigfromPtrOutput {
	return o
}

func (o KongClusterPluginConfigfromPtrOutput) ToKongClusterPluginConfigfromPtrOutputWithContext(ctx context.Context) KongClusterPluginConfigfromPtrOutput {
	return o
}

func (o KongClusterPluginConfigfromPtrOutput) Elem() KongClusterPluginConfigfromOutput {
	return o.ApplyT(func(v *KongClusterPluginConfigfrom) KongClusterPluginConfigfrom {
		if v != nil {
			return *v
		}
		var ret KongClusterPluginConfigfrom
		return ret
	}).(KongClusterPluginConfigfromOutput)
}

// NamespacedSecretValueFromSource represents the source of a secret value specifying the secret namespace
func (o KongClusterPluginConfigfromPtrOutput) SecretKeyRef() KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return o.ApplyT(func(v *KongClusterPluginConfigfrom) *KongClusterPluginConfigfromSecretkeyref {
		if v == nil {
			return nil
		}
		return v.SecretKeyRef
	}).(KongClusterPluginConfigfromSecretkeyrefPtrOutput)
}

// NamespacedSecretValueFromSource represents the source of a secret value specifying the secret namespace
type KongClusterPluginConfigfromSecretkeyref struct {
	// the key containing the value
	Key string `pulumi:"key"`
	// the secret containing the key
	Name string `pulumi:"name"`
	// The namespace containing the secret
	Namespace string `pulumi:"namespace"`
}

// KongClusterPluginConfigfromSecretkeyrefInput is an input type that accepts KongClusterPluginConfigfromSecretkeyrefArgs and KongClusterPluginConfigfromSecretkeyrefOutput values.
// You can construct a concrete instance of `KongClusterPluginConfigfromSecretkeyrefInput` via:
//
//          KongClusterPluginConfigfromSecretkeyrefArgs{...}
type KongClusterPluginConfigfromSecretkeyrefInput interface {
	pulumi.Input

	ToKongClusterPluginConfigfromSecretkeyrefOutput() KongClusterPluginConfigfromSecretkeyrefOutput
	ToKongClusterPluginConfigfromSecretkeyrefOutputWithContext(context.Context) KongClusterPluginConfigfromSecretkeyrefOutput
}

// NamespacedSecretValueFromSource represents the source of a secret value specifying the secret namespace
type KongClusterPluginConfigfromSecretkeyrefArgs struct {
	// the key containing the value
	Key pulumi.StringInput `pulumi:"key"`
	// the secret containing the key
	Name pulumi.StringInput `pulumi:"name"`
	// The namespace containing the secret
	Namespace pulumi.StringInput `pulumi:"namespace"`
}

func (KongClusterPluginConfigfromSecretkeyrefArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KongClusterPluginConfigfromSecretkeyref)(nil)).Elem()
}

func (i KongClusterPluginConfigfromSecretkeyrefArgs) ToKongClusterPluginConfigfromSecretkeyrefOutput() KongClusterPluginConfigfromSecretkeyrefOutput {
	return i.ToKongClusterPluginConfigfromSecretkeyrefOutputWithContext(context.Background())
}

func (i KongClusterPluginConfigfromSecretkeyrefArgs) ToKongClusterPluginConfigfromSecretkeyrefOutputWithContext(ctx context.Context) KongClusterPluginConfigfromSecretkeyrefOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KongClusterPluginConfigfromSecretkeyrefOutput)
}

func (i KongClusterPluginConfigfromSecretkeyrefArgs) ToKongClusterPluginConfigfromSecretkeyrefPtrOutput() KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return i.ToKongClusterPluginConfigfromSecretkeyrefPtrOutputWithContext(context.Background())
}

func (i KongClusterPluginConfigfromSecretkeyrefArgs) ToKongClusterPluginConfigfromSecretkeyrefPtrOutputWithContext(ctx context.Context) KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KongClusterPluginConfigfromSecretkeyrefOutput).ToKongClusterPluginConfigfromSecretkeyrefPtrOutputWithContext(ctx)
}

// KongClusterPluginConfigfromSecretkeyrefPtrInput is an input type that accepts KongClusterPluginConfigfromSecretkeyrefArgs, KongClusterPluginConfigfromSecretkeyrefPtr and KongClusterPluginConfigfromSecretkeyrefPtrOutput values.
// You can construct a concrete instance of `KongClusterPluginConfigfromSecretkeyrefPtrInput` via:
//
//          KongClusterPluginConfigfromSecretkeyrefArgs{...}
//
//  or:
//
//          nil
type KongClusterPluginConfigfromSecretkeyrefPtrInput interface {
	pulumi.Input

	ToKongClusterPluginConfigfromSecretkeyrefPtrOutput() KongClusterPluginConfigfromSecretkeyrefPtrOutput
	ToKongClusterPluginConfigfromSecretkeyrefPtrOutputWithContext(context.Context) KongClusterPluginConfigfromSecretkeyrefPtrOutput
}

type kongClusterPluginConfigfromSecretkeyrefPtrType KongClusterPluginConfigfromSecretkeyrefArgs

func KongClusterPluginConfigfromSecretkeyrefPtr(v *KongClusterPluginConfigfromSecretkeyrefArgs) KongClusterPluginConfigfromSecretkeyrefPtrInput {
	return (*kongClusterPluginConfigfromSecretkeyrefPtrType)(v)
}

func (*kongClusterPluginConfigfromSecretkeyrefPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KongClusterPluginConfigfromSecretkeyref)(nil)).Elem()
}

func (i *kongClusterPluginConfigfromSecretkeyrefPtrType) ToKongClusterPluginConfigfromSecretkeyrefPtrOutput() KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return i.ToKongClusterPluginConfigfromSecretkeyrefPtrOutputWithContext(context.Background())
}

func (i *kongClusterPluginConfigfromSecretkeyrefPtrType) ToKongClusterPluginConfigfromSecretkeyrefPtrOutputWithContext(ctx context.Context) KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KongClusterPluginConfigfromSecretkeyrefPtrOutput)
}

// NamespacedSecretValueFromSource represents the source of a secret value specifying the secret namespace
type KongClusterPluginConfigfromSecretkeyrefOutput struct{ *pulumi.OutputState }

func (KongClusterPluginConfigfromSecretkeyrefOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KongClusterPluginConfigfromSecretkeyref)(nil)).Elem()
}

func (o KongClusterPluginConfigfromSecretkeyrefOutput) ToKongClusterPluginConfigfromSecretkeyrefOutput() KongClusterPluginConfigfromSecretkeyrefOutput {
	return o
}

func (o KongClusterPluginConfigfromSecretkeyrefOutput) ToKongClusterPluginConfigfromSecretkeyrefOutputWithContext(ctx context.Context) KongClusterPluginConfigfromSecretkeyrefOutput {
	return o
}

func (o KongClusterPluginConfigfromSecretkeyrefOutput) ToKongClusterPluginConfigfromSecretkeyrefPtrOutput() KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return o.ToKongClusterPluginConfigfromSecretkeyrefPtrOutputWithContext(context.Background())
}

func (o KongClusterPluginConfigfromSecretkeyrefOutput) ToKongClusterPluginConfigfromSecretkeyrefPtrOutputWithContext(ctx context.Context) KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KongClusterPluginConfigfromSecretkeyref) *KongClusterPluginConfigfromSecretkeyref {
		return &v
	}).(KongClusterPluginConfigfromSecretkeyrefPtrOutput)
}

// the key containing the value
func (o KongClusterPluginConfigfromSecretkeyrefOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KongClusterPluginConfigfromSecretkeyref) string { return v.Key }).(pulumi.StringOutput)
}

// the secret containing the key
func (o KongClusterPluginConfigfromSecretkeyrefOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KongClusterPluginConfigfromSecretkeyref) string { return v.Name }).(pulumi.StringOutput)
}

// The namespace containing the secret
func (o KongClusterPluginConfigfromSecretkeyrefOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v KongClusterPluginConfigfromSecretkeyref) string { return v.Namespace }).(pulumi.StringOutput)
}

type KongClusterPluginConfigfromSecretkeyrefPtrOutput struct{ *pulumi.OutputState }

func (KongClusterPluginConfigfromSecretkeyrefPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KongClusterPluginConfigfromSecretkeyref)(nil)).Elem()
}

func (o KongClusterPluginConfigfromSecretkeyrefPtrOutput) ToKongClusterPluginConfigfromSecretkeyrefPtrOutput() KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return o
}

func (o KongClusterPluginConfigfromSecretkeyrefPtrOutput) ToKongClusterPluginConfigfromSecretkeyrefPtrOutputWithContext(ctx context.Context) KongClusterPluginConfigfromSecretkeyrefPtrOutput {
	return o
}

func (o KongClusterPluginConfigfromSecretkeyrefPtrOutput) Elem() KongClusterPluginConfigfromSecretkeyrefOutput {
	return o.ApplyT(func(v *KongClusterPluginConfigfromSecretkeyref) KongClusterPluginConfigfromSecretkeyref {
		if v != nil {
			return *v
		}
		var ret KongClusterPluginConfigfromSecretkeyref
		return ret
	}).(KongClusterPluginConfigfromSecretkeyrefOutput)
}

// the key containing the value
func (o KongClusterPluginConfigfromSecretkeyrefPtrOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KongClusterPluginConfigfromSecretkeyref) *string {
		if v == nil {
			return nil
		}
		return &v.Key
	}).(pulumi.StringPtrOutput)
}

// the secret containing the key
func (o KongClusterPluginConfigfromSecretkeyrefPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KongClusterPluginConfigfromSecretkeyref) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The namespace containing the secret
func (o KongClusterPluginConfigfromSecretkeyrefPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KongClusterPluginConfigfromSecretkeyref) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

type KongClusterPluginMetadata struct {
}

// Ordering overrides the normal plugin execution order
type KongClusterPluginOrdering struct {
	// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
	After map[string][]string `pulumi:"after"`
	// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
	Before map[string][]string `pulumi:"before"`
}

// KongClusterPluginOrderingInput is an input type that accepts KongClusterPluginOrderingArgs and KongClusterPluginOrderingOutput values.
// You can construct a concrete instance of `KongClusterPluginOrderingInput` via:
//
//          KongClusterPluginOrderingArgs{...}
type KongClusterPluginOrderingInput interface {
	pulumi.Input

	ToKongClusterPluginOrderingOutput() KongClusterPluginOrderingOutput
	ToKongClusterPluginOrderingOutputWithContext(context.Context) KongClusterPluginOrderingOutput
}

// Ordering overrides the normal plugin execution order
type KongClusterPluginOrderingArgs struct {
	// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
	After pulumi.StringArrayMapInput `pulumi:"after"`
	// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
	Before pulumi.StringArrayMapInput `pulumi:"before"`
}

func (KongClusterPluginOrderingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KongClusterPluginOrdering)(nil)).Elem()
}

func (i KongClusterPluginOrderingArgs) ToKongClusterPluginOrderingOutput() KongClusterPluginOrderingOutput {
	return i.ToKongClusterPluginOrderingOutputWithContext(context.Background())
}

func (i KongClusterPluginOrderingArgs) ToKongClusterPluginOrderingOutputWithContext(ctx context.Context) KongClusterPluginOrderingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KongClusterPluginOrderingOutput)
}

func (i KongClusterPluginOrderingArgs) ToKongClusterPluginOrderingPtrOutput() KongClusterPluginOrderingPtrOutput {
	return i.ToKongClusterPluginOrderingPtrOutputWithContext(context.Background())
}

func (i KongClusterPluginOrderingArgs) ToKongClusterPluginOrderingPtrOutputWithContext(ctx context.Context) KongClusterPluginOrderingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KongClusterPluginOrderingOutput).ToKongClusterPluginOrderingPtrOutputWithContext(ctx)
}

// KongClusterPluginOrderingPtrInput is an input type that accepts KongClusterPluginOrderingArgs, KongClusterPluginOrderingPtr and KongClusterPluginOrderingPtrOutput values.
// You can construct a concrete instance of `KongClusterPluginOrderingPtrInput` via:
//
//          KongClusterPluginOrderingArgs{...}
//
//  or:
//
//          nil
type KongClusterPluginOrderingPtrInput interface {
	pulumi.Input

	ToKongClusterPluginOrderingPtrOutput() KongClusterPluginOrderingPtrOutput
	ToKongClusterPluginOrderingPtrOutputWithContext(context.Context) KongClusterPluginOrderingPtrOutput
}

type kongClusterPluginOrderingPtrType KongClusterPluginOrderingArgs

func KongClusterPluginOrderingPtr(v *KongClusterPluginOrderingArgs) KongClusterPluginOrderingPtrInput {
	return (*kongClusterPluginOrderingPtrType)(v)
}

func (*kongClusterPluginOrderingPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KongClusterPluginOrdering)(nil)).Elem()
}

func (i *kongClusterPluginOrderingPtrType) ToKongClusterPluginOrderingPtrOutput() KongClusterPluginOrderingPtrOutput {
	return i.ToKongClusterPluginOrderingPtrOutputWithContext(context.Background())
}

func (i *kongClusterPluginOrderingPtrType) ToKongClusterPluginOrderingPtrOutputWithContext(ctx context.Context) KongClusterPluginOrderingPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KongClusterPluginOrderingPtrOutput)
}

// Ordering overrides the normal plugin execution order
type KongClusterPluginOrderingOutput struct{ *pulumi.OutputState }

func (KongClusterPluginOrderingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KongClusterPluginOrdering)(nil)).Elem()
}

func (o KongClusterPluginOrderingOutput) ToKongClusterPluginOrderingOutput() KongClusterPluginOrderingOutput {
	return o
}

func (o KongClusterPluginOrderingOutput) ToKongClusterPluginOrderingOutputWithContext(ctx context.Context) KongClusterPluginOrderingOutput {
	return o
}

func (o KongClusterPluginOrderingOutput) ToKongClusterPluginOrderingPtrOutput() KongClusterPluginOrderingPtrOutput {
	return o.ToKongClusterPluginOrderingPtrOutputWithContext(context.Background())
}

func (o KongClusterPluginOrderingOutput) ToKongClusterPluginOrderingPtrOutputWithContext(ctx context.Context) KongClusterPluginOrderingPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KongClusterPluginOrdering) *KongClusterPluginOrdering {
		return &v
	}).(KongClusterPluginOrderingPtrOutput)
}

// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
func (o KongClusterPluginOrderingOutput) After() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KongClusterPluginOrdering) map[string][]string { return v.After }).(pulumi.StringArrayMapOutput)
}

// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
func (o KongClusterPluginOrderingOutput) Before() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v KongClusterPluginOrdering) map[string][]string { return v.Before }).(pulumi.StringArrayMapOutput)
}

type KongClusterPluginOrderingPtrOutput struct{ *pulumi.OutputState }

func (KongClusterPluginOrderingPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KongClusterPluginOrdering)(nil)).Elem()
}

func (o KongClusterPluginOrderingPtrOutput) ToKongClusterPluginOrderingPtrOutput() KongClusterPluginOrderingPtrOutput {
	return o
}

func (o KongClusterPluginOrderingPtrOutput) ToKongClusterPluginOrderingPtrOutputWithContext(ctx context.Context) KongClusterPluginOrderingPtrOutput {
	return o
}

func (o KongClusterPluginOrderingPtrOutput) Elem() KongClusterPluginOrderingOutput {
	return o.ApplyT(func(v *KongClusterPluginOrdering) KongClusterPluginOrdering {
		if v != nil {
			return *v
		}
		var ret KongClusterPluginOrdering
		return ret
	}).(KongClusterPluginOrderingOutput)
}

// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
func (o KongClusterPluginOrderingPtrOutput) After() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *KongClusterPluginOrdering) map[string][]string {
		if v == nil {
			return nil
		}
		return v.After
	}).(pulumi.StringArrayMapOutput)
}

// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
func (o KongClusterPluginOrderingPtrOutput) Before() pulumi.StringArrayMapOutput {
	return o.ApplyT(func(v *KongClusterPluginOrdering) map[string][]string {
		if v == nil {
			return nil
		}
		return v.Before
	}).(pulumi.StringArrayMapOutput)
}

// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
type KongClusterPluginOrderingAfter struct {
}

// PluginOrderingPhase indicates which plugins in a phase should affect the target plugin's order
type KongClusterPluginOrderingBefore struct {
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KongClusterPluginConfigfromInput)(nil)).Elem(), KongClusterPluginConfigfromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KongClusterPluginConfigfromPtrInput)(nil)).Elem(), KongClusterPluginConfigfromArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KongClusterPluginConfigfromSecretkeyrefInput)(nil)).Elem(), KongClusterPluginConfigfromSecretkeyrefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KongClusterPluginConfigfromSecretkeyrefPtrInput)(nil)).Elem(), KongClusterPluginConfigfromSecretkeyrefArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KongClusterPluginOrderingInput)(nil)).Elem(), KongClusterPluginOrderingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KongClusterPluginOrderingPtrInput)(nil)).Elem(), KongClusterPluginOrderingArgs{})
	pulumi.RegisterOutputType(KongClusterPluginConfigfromOutput{})
	pulumi.RegisterOutputType(KongClusterPluginConfigfromPtrOutput{})
	pulumi.RegisterOutputType(KongClusterPluginConfigfromSecretkeyrefOutput{})
	pulumi.RegisterOutputType(KongClusterPluginConfigfromSecretkeyrefPtrOutput{})
	pulumi.RegisterOutputType(KongClusterPluginOrderingOutput{})
	pulumi.RegisterOutputType(KongClusterPluginOrderingPtrOutput{})
}
